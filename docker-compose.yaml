version: "3"
services:
    jaegertracing1:
        image: jaegertracing/all-in-one:latest
        container_name: jaegertracing1
        environment:
            - COLLECTOR_ZIPKIN_HTTP_PORT=:9411
            - COLLECTOR_OTLP_ENABLED=true
        ports:
            - 6831:6831/udp
            - 6832:6832/udp
            - 5778:5778
            - 16685:16685
            - 16686:16686
            - 14268:14268
            - 14269:14269
            - 14250:14250
            - 9411:9411
            - 4317:4317
            - 4318:4318
    postgres1:
        image: postgres:latest
        container_name: postgres1
        networks: ["deimos-api"]
        ports:
            - "5432:5432"
        env_file:
            - ./.env
        environment:
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        volumes:
            - postgres:/var/lib/postgresql/data
    zookeeper1:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper1
        networks: ["deimos-api"]
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_SERVERS: zookeeper1:2888:3888
    kafka1:
        image: confluentinc/cp-kafka:latest
        container_name: kafka1
        networks: ["deimos-api"]
        ports:
            - "9092:9092"
            - "29092:29092"
            - "9999:9999"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        depends_on:
            - zookeeper1
volumes:
    postgres:
networks:
    deimos-api:
        name: deimos-api
        driver: bridge
