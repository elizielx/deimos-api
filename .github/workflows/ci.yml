name: Continuous Integration

on:
    pull_request: {}
    push:
        branches:
            - master

concurrency:
    group: ${{ github.job }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    lint:
        name: Lint code
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: "yarn"
            - name: Install dependencies
              uses: bahmutov/npm-install@v1
            - name: Lint code
              run: yarn lint
    test:
        name: Test code
        runs-on: ubuntu-latest
        env:
            DATABASE_HOST: localhost
            DATABASE_USER: postgres
            DATABASE_PASSWORD: postgres
            DATABASE_NAME: deimos
            DATABASE_PORT: 5432
            DATABASE_SYNC: true
            DATABASE_LOGGING: false
            PORT: 3000
            NODE_ENV: test
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: "yarn"
            - name: Install dependencies
              uses: bahmutov/npm-install@v1
            - name: Setup Docker Compose
              uses: isbang/compose-action@v1.5.1
              with:
                  compose-file: "./docker-compose.ci.yaml"
                  down-flags: "--volumes"
            - name: Add environment variables to .env.test
              run: echo "DATABASE_HOST=${{ env.DATABASE_HOST }}" > .env.test && echo "DATABASE_USER=${{ env.DATABASE_USER }}" >> .env.test && echo "DATABASE_PASSWORD=${{ env.DATABASE_PASSWORD }}" >> .env.test && echo "DATABASE_NAME=${{ env.DATABASE_NAME }}" >> .env.test && echo "DATABASE_PORT=${{ env.DATABASE_PORT }}" >> .env.test && echo "DATABASE_SYNC=${{ env.DATABASE_SYNC }}" >> .env.test && echo "DATABASE_LOGGING=${{ env.DATABASE_LOGGING }}" >> .env.test && echo "PORT=${{ env.PORT }}" >> .env.test && echo "NODE_ENV=${{ env.NODE_ENV }}" >> .env.test
            - name: Test code
              run: yarn test
    format:
        name: Format code
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: "yarn"
            - name: Install dependencies
              uses: bahmutov/npm-install@v1
            - name: Format code
              run: yarn format:check
